name: Draft Release

on:
  workflow_dispatch:

jobs:
  draft-release:
    runs-on: ubuntu-latest
    env:
      BUILD_TYPE: RelWithDebInfo
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Install required system packages
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-jinja2 pkg-config autoconf automake libtool python3 linux-libc-dev curl libltdl-dev libx11-dev libxft-dev libxext-dev libwayland-dev libxkbcommon-dev libegl1-mesa-dev libibus-1.0-dev

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install eas-cli
        run: npm install -g eas-cli

      - name: Extract version from CMakeLists.txt
        id: version
        run: |
          VERSION=$(grep -Po 'project\([^ ]+ VERSION \K[0-9]+\.[0-9]+\.[0-9]+' CMakeLists.txt)
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag or release exists
        id: check_tag
        run: |
          TAG="v${{ steps.version.outputs.VERSION }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG already exists!" >&2
            exit 1
          fi
          if gh release view "$TAG" >/dev/null 2>&1; then
            echo "Release $TAG already exists!" >&2
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: lukka/get-cmake@latest
        with:
          cmakeVersion: "~3.25.0"
      - name: Setup anew (or from cache) vcpkg (and does not build any package)
        uses: lukka/run-vcpkg@v11

      - name: Cache cross-compile toolchain
        id: cache-toolchain
        uses: actions/cache@v4
        with:
          path: ~/cross-compile
          key: cross-compile-toolchain-v0.0.1-beta

      - name: Download and extract cross-compile toolchain
        if: steps.cache-toolchain.outputs.cache-hit != 'true'
        run: |
          mkdir -p ~/cross-compile
          cd ~/cross-compile
          wget -O cross-compile.tar.xz "https://github.com/sshcrack/led-matrix/releases/download/v0.0.1-beta/cross-compile.tar.xz"
          tar -xvf cross-compile.tar.xz
          rm cross-compile.tar.xz

      - name: Create vcpkg triplet for arm64-rpi
        run: |
          mkdir -p $VCPKG_ROOT/triplets/community
          cat > $VCPKG_ROOT/triplets/community/arm64-rpi.cmake << 'EOF'
          set(VCPKG_TARGET_ARCHITECTURE arm64)
          set(VCPKG_CRT_LINKAGE dynamic)
          set(VCPKG_LIBRARY_LINKAGE static)

          set(VCPKG_CMAKE_SYSTEM_NAME Linux)

          set(VCPKG_CHAINLOAD_TOOLCHAIN_FILE $ENV{HOME}/cross-compile/PI.cmake)
          EOF

      - name: Build Emulator
        uses: lukka/run-cmake@v10
        with:
          configurePreset: "emulator"
          buildPreset: "emulator"
          packagePreset: "emulator"
          configurePresetAdditionalArgs: '["-DCMAKE_POLICY_VERSION_MINIMUM=3.5"]'

      - name: Build led-matrix for arm64 RPI
        uses: lukka/run-cmake@v10
        with:
          configurePreset: "cross-compile"
          buildPreset: "cross-compile"
          packagePreset: "cross-compile"
          configurePresetAdditionalArgs: '["-DCROSS_COMPILE_ROOT=$HOME/cross-compile", "-DCMAKE_POLICY_VERSION_MINIMUM=3.5"]'

      - name: Build React Native APK
        working-directory: react-native
        run: |
          pnpm install
          pnpm exec eas-cli build -p android --profile preview --local
          APK=$(ls build-*.apk | head -n1)
          cp "$APK" "../app-v${{ steps.version.outputs.VERSION }}.apk"

      - name: Create draft release
        id: create_release
        run: |
          TAG="v${{ steps.version.outputs.VERSION }}"
          # Get previous tag (if any)
          PREV_TAG=$(git tag --sort=-creatordate | grep -v "$TAG" | head -n1 || true)
          if [ -n "$PREV_TAG" ]; then
            CHANGELOG="[Changelog](https://github.com/${{ github.repository }}/compare/$PREV_TAG...$TAG)"
          else
            CHANGELOG="Initial release."
          fi
          gh release create "$TAG" \
            --draft \
            --title "$TAG" \
            --notes "$CHANGELOG"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload emulator artifact to release
        run: |
          gh release upload "v${{ steps.version.outputs.VERSION }}" emulator_build/emulator-v${{ steps.version.outputs.VERSION }}.tar.gz
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload led-matrix artifacts to release
        run: |
          gh release upload "v${{ steps.version.outputs.VERSION }}" build/led-matrix-v${{ steps.version.outputs.VERSION }}.tar.gz
          gh release upload "v${{ steps.version.outputs.VERSION }}" build/led-matrix-v${{ steps.version.outputs.VERSION }}.deb
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload React Native APK to release
        run: |
          gh release upload "v${{ steps.version.outputs.VERSION }}" app-v${{ steps.version.outputs.VERSION }}.apk
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
